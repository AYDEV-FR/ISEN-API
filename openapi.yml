openapi: '3.0.2'
info:
  title: ISEN API
  version: '0.1.1'
servers:
  - url: https://api.server.test/v1
paths:
  /token:
    post:
      security: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: OK
  # /info:
  #   get:
  #     summary: Return first name and last name
  #     description: TODO
  #     security:
  #       - BearerAuth: []
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Not authenticated
  /notations:
    get:
      summary: Returns a list of all user's notes
      description: TODO
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notation'
              example:
                - date: 05/12/2001
                  code: "21_HOGWART_S3_HERBOLOGY"
                  note: "19"
                  comments: "Good job !"
                  teachers:
                    - Professor Sprout
                - date: 05/12/2001
                  code: "21_HOGWAR_Defense_Against_the_Dark_Arts "
                  note: "18"
                  comments: "Your Stunning Spell could be better"
                  teachers:
                    - Quirinus Quirrell
                    - Dolores Umbridge
                    - Remus Lupin
        '401':
          description: Not authenticated
  /notations/class:
    get:
      summary: Returns a list of all user's class notes
      description: TODO
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotationClass'
              example:
                - code: "21_HOGWART_S3_HERBOLOGY"
                  name: "Semester 3 - Herbology - Examination"
                  notePersonal: "19"
                  noteAverage: "14.21"
                  noteMin: "9.64"
                  noteMax: "19"
                  presence: "62"
                - code: "21_HOGWAR_Defense_Against_the_Dark_Arts"
                  name: "Semester 3 - Defense Against the Dark Arts - Examination"
                  notePersonal: "18"
                  noteAverage: "10.2"
                  noteMin: "0"
                  noteMax: "18.1"
                  presence: "76"
        '401':
          description: Not authenticated
  /absences:
    summary: Returns a list of all user's absences
    description: TODO
    get:
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Absence'
              example:
                - date: 05/12/2001
                  reason: "Absence excusée"
                  duration: "4:00"
                  hours: "08:00 - 12:00"
                  course: "Herbology class"
                  teachers:
                    - Professor Sprout
                  subject: Herbology of Mandrake Root
                - date: 05/12/2001
                  reason: "Absence non excusée"
                  duration: "2:00"
                  hours: "08:00 - 12:00"
                  course: "Potion class"
                  teachers:
                    - Severus Snape
                    - Horace Slughorn
                  subject: Love filter potion
                  
        '401':
          description: Not authenticated
  /agenda:
    summary: Returns a list of all user's courses
    description: TODO
    get:
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: start
          schema:
            type: integer
          description: The start timestamp in UNIX Milliseconds when the events in the agenda will begin
        - in: query
          name: end
          schema:
            type: integer
          description: The end timestamp in UNIX Milliseconds when the events in the agenda will end
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduleEvent'
              example:
                - id: "1"
                  title: "08:00 - 10:00 - Herbology Class - Professor - Sprout - GreenHouse - TD - (02h00) -  - 154632"
                  start: "2001-12-05T08:00:00+0100"
                  end: "2001-12-05T10:00:00+0100"
                  editable: true
                  className: "TD"
                - id: "2"
                  title: "10:00 - 12:00 - Potion Class - Severus - Snape - Alchemy Classroom - Magistral Course - (02h00) -  - 597864"
                  start: "2001-12-05T10:00:00+0100"
                  end: "2001-12-05T12:00:00+0100"
                  editable: true
                  className: "CM"
        '401':
          description: Not authenticated
  /agenda/event/{eventId}:
    summary: Returns an event's details from the user's personal agenda
    description: TODO
    get:
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
            minimum: 1
          description: The event ID that can be found in the agenda.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEventDetails'
              example:
                id: "1"
                start: "Du mercredi 5 décembre 2001 à 08:00"
                end: "Au mercredi 5 décembre 2001 à 10:00"
                status: "REALISE"
                subject: "Herbology"
                type: "Travaux dirigés"
                description: ""
                isPaper: false
                rooms:
                  - Greenhouse
                teachers:
                  - Sprout Professor
                students:
                  - GRANGER Hermione
                  - POTTER Harry
                  - WEASLEY Ronald
                groups:
                  - 0102YEAR1
                courseName: "Herbology Class"
                module: "Herbology"
        '401':
          description: Not authenticated
  /personal-informations:
    summary: Returns all of the registered user's informations
    description: TODO
    get:
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalInformations'
              example:
                title: "Mister"
                name: "Ronald"
                firstName: "WEASLEY"
                middleNames: "Bilius"
                sex: "M"
                birthDate: "01/03/1980"
                birthPlace: "The Burrow"
                nationality: "England"
                personalAddress:
                  title: "Mr."
                  name: "Ronald Weasley"
                  streetAddressLine1: "The Burrow"
                  streetAddressLine2: "Devon"
                  streetAddressLine3: "-"
                  postalCodeCity: "EX11 Ottery St. Cactchpole"
                  country: "United Kingdom"
                parentsAddress:
                  title: "Mr. & Ms."
                  name: "Weasley"
                  streetAddressLine1: "The Burrow"
                  streetAddressLine2: "Devon"
                  streetAddressLine3: "-"
                  postalCodeCity: "EX11 Ottery St. Cactchpole"
                  country: "United Kingdom"
                reportSendingAddress:
                  title: "Mr. & Ms."
                  name: "Weasley"
                  streetAddressLine1: "The Burrow"
                  streetAddressLine2: "Devon"
                  streetAddressLine3: "-"
                  postalCodeCity: "EX11 Ottery St. Cactchpole"
                  country: "United Kingdom"
                billingAddress:
                  title: "Mr. & Ms."
                  name: "Weasley"
                  streetAddressLine1: "The Burrow"
                  streetAddressLine2: "Devon"
                  streetAddressLine3: "-"
                  postalCodeCity: "EX11 Ottery St. Cactchpole"
                  country: "United Kingdom"
                personalPhone: "+447769578549"
                parentsPhone: "+447464751722"
                reportSendingEmail: "arthur.weasley@mom.gouv.uk"
                parentsEmail: "arthur.weasley@mom.gouv.uk"
                personalEmail: "ronald.weasley@poudlard.uk"
                lastCertificate: "Baccalauréat"
                bac:
                  academy: "London"
                  year: "1990"
                  type: "L"
                  note: "11.54"
                  merit: "-"
                  school: "City of London School"
                  schoolCode: "FDS78DS5"
                father:
                  name: "Weasley"
                  firstName: "Arthur"
                  occupation: "Government Officer"
                mother:
                  name: "Weasley"
                  firstName: "Molly"
                  occupation: "Parenting"
                haveAcknowledgeGlobalRules: true
                haveAcknowledgeStudentLifeCharter: true
                canIsenUsePersonalImage: true

        '401':
          description: Not authenticated

components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Absence:
      type: object
      properties:
        date:
          type: string
        reason:
          type: string
        duration:
          type: string
        hours:
          type: string
        course:
          type: string
        teachers:
          type: array
          items:
            type: string
        subject:
          type: string
    Notation:
      type: object
      properties:
        date:
          type: string
        code:
          type: string
        name:
          type: string
        note:
          type: string
        comments:
          type: string
        teachers:
          type: array
          items:
            type: string
    Address:
      type: object
      properties:
        title:
          type: string
        name:
          type: string
        streetAddressLine1:
          type: string
        streetAddressLine2:
          type: string
        streetAddressLine3:
          type: string
        postalCodeCity:
          type: string
        country:
          type: string
    BacType:
      type: object
      properties:
        academy:
          type: string
        year:
          type: string
        type:
          type: string
        note:
          type: string
        merit:
          type: string
        school:
          type: string
        schoolCode:
          type: string
    Parent:
      type: object
      properties:
        name:
          type: string
        firstName:
          type: string
        occupation:
          type: string
    PersonalInformations:
      type: object
      properties:
        title:
          type: string
        name:
          type: string
        firstName:
          type: string
        middleNames:
          type: string
        sex:
          type: string
        birthDate:
          type: string
        birthPlace:
          type: string
        nationality:
          type: string
        personalAddress:
          $ref: '#/components/schemas/Address'
        parentsAddress:
          $ref: '#/components/schemas/Address'
        reportSendingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        personalPhone:
          type: string
        parentsPhone:
          type: string
        reportSendingEmail:
          type: string
        parentsEmail:
          type: string
        personalEmail:
          type: string
        lastCertificate:
          type: string
        Bac:
          $ref: '#/components/schemas/BacType'
        Father:
          $ref: '#/components/schemas/Parent'
        Mother:
          $ref: '#/components/schemas/Parent'
        HaveAcknowledgeGlobalRules:
          type: boolean
        HaveAcknowledgeStudentLifeCharter:
          type: boolean
        CanIsenUsePersonalImage:
          type: boolean
    NotationClass:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        notePersonal:
          type: string
        noteAverage:
          type: string
        noteMin:
          type: string
        noteMax:
          type: string
        presence:
          type: string
    ScheduleEvent:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        start:
          type: string
        end:
          type: string
        allDay:
          type: boolean
        editable:
          type: boolean
        className:
          type: string
    ScheduleEventDetails:
      type: object
      properties:
        id:
          type: string
        start:
          type: string
        end:
          type: string
        status:
          type: string
        subject:
          type: string
        type:
          type: string
        description:
          type: string
        isPaper:
          type: boolean
        rooms:
          type: array
          items:
            type: string
        teachers:
          type: array
          items:
            type: string
        students:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            type: string
        courseName:
          type: string
        module:
          type: string

  securitySchemes:
   BearerAuth:
      type: http
      scheme: bearer