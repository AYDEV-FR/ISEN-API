openapi: '3.0.2'
info:
  title: ISEN API
  version: '0.1.1'
servers:
  - url: https://api.server.test/v1
paths:
  /token:
    post:
      security: []
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: OK
  # /info:
  #   get:
  #     summary: Return first name and last name
  #     description: TODO
  #     security:
  #       - BearerAuth: []
  #     responses:
  #       '200':
  #         description: OK
  #       '401':
  #         description: Not authenticated
  /notations:
    get:
      summary: Returns a list of all user's notes
      description: TODO
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notation'
              example:
                - Date: 05/12/2001
                  Code: "21_HOGWART_S3_HERBOLOGY"
                  Note: "19"
                  Comments: "Good job !"
                  Teachers:
                    - Professor Sprout
                - Date: 05/12/2001
                  Code: "21_HOGWAR_Defense_Against_the_Dark_Arts "
                  Note: "18"
                  Comments: "Your Stunning Spell could be better"
                  Teachers:
                    - Quirinus Quirrell
                    - Dolores Umbridge
                    - Remus Lupin
        '401':
          description: Not authenticated
  /absences:
    summary: Returns a list of all user's absences
    description: TODO
    get:
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Absence'
              example:
                - Date: 05/12/2001
                  Reason: "Absence excusée"
                  Duration: "4:00"
                  Hours: "08:00 - 12:00"
                  Course: "Herbology class"
                  Teachers:
                    - Professor Sprout
                  Subject: Herbology of Mandrake Root
                - Date: 05/12/2001
                  Reason: "Absence non excusée"
                  Duration: "2:00"
                  Hours: "08:00 - 12:00"
                  Course: "Potion class"
                  Teachers:
                    - Severus Snape
                    - Horace Slughorn
                  Subject: Love filter potion
                  
        '401':
          description: Not authenticated
  /agenda:
    summary: Returns a list of all user's courses
    description: TODO
    get:
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: start
          schema:
            type: integer
          description: The start timestamp in UNIX Milliseconds when the events in the agenda will begin
        - in: query
          name: end
          schema:
            type: integer
          description: The end timestamp in UNIX Milliseconds when the events in the agenda will end
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduleEvent'
              example:
                - Id: "1"
                  Title: "08:00 - 10:00 - Herbology Class - Professor - Sprout - GreenHouse - TD - (02h00) -  - 154632"
                  Start: "2001-12-05T08:00:00+0100"
                  End: "2001-12-05T10:00:00+0100"
                  Editable: true
                  ClassName: "TD"
                - Id: "2"
                  Title: "10:00 - 12:00 - Potion Class - Severus - Snape - Alchemy Classroom - Magistral Course - (02h00) -  - 597864"
                  Start: "2001-12-05T10:00:00+0100"
                  End: "2001-12-05T12:00:00+0100"
                  Editable: true
                  ClassName: "CM"
        '401':
          description: Not authenticated
  /agenda/event/{eventId}:
    summary: Returns an event's details from the user's personal agenda
    description: TODO
    get:
      security:
        - BearerAuth: [ ]
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
            minimum: 1
          description: The event ID that can be found in the agenda.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleEventDetails'
              example:
                Id: "1"
                Start: "Du mercredi 5 décembre 2001 à 08:00"
                End: "Au mercredi 5 décembre 2001 à 10:00"
                Status: "REALISE"
                Subject: "Herbology"
                Type: "Travaux dirigés"
                Description: ""
                IsPaper: false
                Rooms:
                  - Greenhouse
                Teachers:
                  - Sprout Professor
                Students:
                  - GRANGER Hermione
                  - POTTER Harry
                  - WEASLEY Ronald
                Groups:
                  - 0102YEAR1
                CourseName: "Herbology Class"
                Module: "Herbology"
        '401':
          description: Not authenticated

components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Absence:
      type: object
      properties:
        Date:
          type: string
        Reason:
          type: string
        Duration:
          type: string
        Hours:
          type: string
        Course:
          type: string
        Teachers:
          type: array
          items:
            type: string
        Subject:
          type: string
    Notation:
      type: object
      properties:
        Date:
          type: string
        Code:
          type: string
        Name:
          type: string
        Note:
          type: string
        Comments:
          type: string
        Teachers:
          type: array
          items:
            type: string
    ScheduleEvent:
      type: object
      properties:
        Id:
          type: string
        Title:
          type: string
        Start:
          type: string
        End:
          type: string
        AllDay:
          type: boolean
        Editable:
          type: boolean
        ClassName:
          type: string
    ScheduleEventDetails:
      type: object
      properties:
        Id:
          type: string
        Start:
          type: string
        End:
          type: string
        Status:
          type: string
        Subject:
          type: string
        Type:
          type: string
        Description:
          type: string
        IsPaper:
          type: boolean
        Rooms:
          type: array
          items:
            type: string
        Teachers:
          type: array
          items:
            type: string
        Students:
          type: array
          items:
            type: string
        Groups:
          type: array
          items:
            type: string
        CourseName:
          type: string
        Module:
          type: string

  securitySchemes:
   BearerAuth:
      type: http
      scheme: bearer