{
    "swagger": "2.0",
    "info": {
        "description": "REST API scrapping the webaurion website from ISEN Méditerranée",
        "title": "ISEN-API",
        "contact": {
            "name": "GitHub",
            "url": "https://github.com/AYDEV-FR/ISEN-API"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/AYDEV-FR/ISEN-API/blob/main/LICENSE"
        },
        "version": "0.0.5"
    },
    "basePath": "/v1",
    "paths": {
        "/absences": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user's absences",
                "produces": [
                    "application/json"
                ],
                "summary": "List user's absences",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/isen.Absence"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/agenda": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of all user's courses between start and end timestamps.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user's agenda",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UNIX Milliseconds when the events in the agenda will begin",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "UNIX Milliseconds when the events in the agenda will end",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/isen.ScheduleEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/agenda/event/{eventId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get informations of an agenda event from its ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get informations from a specific event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agenda Event ID",
                        "name": "eventId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isen.ScheduleEventDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/notations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user's notations",
                "produces": [
                    "application/json"
                ],
                "summary": "List user's notations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/isen.Notation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/notations/class": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all user's class notes with min, average and max note",
                "produces": [
                    "application/json"
                ],
                "summary": "List user's class notations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/isen.Notation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/personal-informations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user's personal informations",
                "produces": [
                    "application/json"
                ],
                "summary": "List user's personal informations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/isen.PersonalInformations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "description": "Get ISEN Token needed for every authenticated request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Get ISEN Token",
                "parameters": [
                    {
                        "description": "Account credentials",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aurion.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "aurion.Login": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "1",
                    "example": "ronald.weasley"
                },
                "password": {
                    "type": "string",
                    "x-order": "2",
                    "example": "i\u003c3hermione"
                }
            }
        },
        "isen.Absence": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "x-order": "1",
                    "example": "05/12/2001"
                },
                "reason": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Unexcused absence"
                },
                "duration": {
                    "type": "string",
                    "x-order": "3",
                    "example": "2:00"
                },
                "hours": {
                    "type": "string",
                    "x-order": "4",
                    "example": "08:00 - 10:00"
                },
                "course": {
                    "type": "string",
                    "x-order": "5",
                    "example": "Potion class"
                },
                "teachers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "6",
                    "example": [
                        "Severus Snape",
                        "Horace Slughorn"
                    ]
                },
                "subject": {
                    "type": "string",
                    "x-order": "7",
                    "example": "Love filter potion"
                }
            }
        },
        "isen.Address": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Mr."
                },
                "name": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Ronald Weasley"
                },
                "streetAddressLine1": {
                    "type": "string",
                    "x-order": "3",
                    "example": "The Burrow"
                },
                "streetAddressLine2": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Devon"
                },
                "streetAddressLine3": {
                    "type": "string",
                    "x-order": "5",
                    "example": "-"
                },
                "postalCodeCity": {
                    "type": "string",
                    "x-order": "6",
                    "example": "EX11 Ottery St. Cactchpole"
                },
                "country": {
                    "type": "string",
                    "x-order": "7",
                    "example": "United Kingdom"
                }
            }
        },
        "isen.BacType": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string",
                    "x-order": "1",
                    "example": "London"
                },
                "year": {
                    "type": "string",
                    "x-order": "2",
                    "example": "1990"
                },
                "type": {
                    "type": "string",
                    "x-order": "3",
                    "example": "L"
                },
                "note": {
                    "type": "string",
                    "x-order": "4",
                    "example": "11.54"
                },
                "merit": {
                    "type": "string",
                    "x-order": "5",
                    "example": "-"
                },
                "school": {
                    "type": "string",
                    "x-order": "6",
                    "example": "City of London School"
                },
                "schoolCode": {
                    "type": "string",
                    "x-order": "7",
                    "example": "FDS78DS5"
                }
            }
        },
        "isen.Notation": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "x-order": "1",
                    "example": "05/12/2001"
                },
                "code": {
                    "type": "string",
                    "x-order": "2",
                    "example": "21_HOGWAR_Defense_Against_the_Dark_Arts"
                },
                "name": {
                    "type": "string",
                    "x-order": "3",
                    "example": "Semester 3 - Defense Against the Dark Arts - Examination"
                },
                "note": {
                    "type": "string",
                    "x-order": "4",
                    "example": "18"
                },
                "absenceReason": {
                    "type": "string",
                    "x-order": "5",
                    "example": ""
                },
                "comments": {
                    "type": "string",
                    "x-order": "6",
                    "example": "Your Stunning Spell could be better"
                },
                "teachers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "7",
                    "example": [
                        "Quirinus Quirrell",
                        "Dolores Umbridge",
                        "Remus Lupin"
                    ]
                }
            }
        },
        "isen.Parent": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Weasley"
                },
                "firstName": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Arthur"
                },
                "occupation": {
                    "type": "string",
                    "x-order": "3",
                    "example": "Government Officer"
                }
            }
        },
        "isen.PersonalInformations": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "x-order": "10",
                    "example": "Mister"
                },
                "name": {
                    "type": "string",
                    "x-order": "11",
                    "example": "Ronald"
                },
                "firstName": {
                    "type": "string",
                    "x-order": "12",
                    "example": "WEASLEY"
                },
                "middleNames": {
                    "type": "string",
                    "x-order": "13",
                    "example": "Bilius"
                },
                "sex": {
                    "type": "string",
                    "x-order": "14",
                    "example": "M"
                },
                "birthDate": {
                    "type": "string",
                    "x-order": "15",
                    "example": "01/03/1980"
                },
                "birthPlace": {
                    "type": "string",
                    "x-order": "16",
                    "example": "The Burrow"
                },
                "nationality": {
                    "type": "string",
                    "x-order": "17",
                    "example": "England"
                },
                "personalAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Address"
                        }
                    ],
                    "x-order": "18"
                },
                "parentsAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Address"
                        }
                    ],
                    "x-order": "19"
                },
                "reportSendingAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Address"
                        }
                    ],
                    "x-order": "20"
                },
                "billingAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Address"
                        }
                    ],
                    "x-order": "21"
                },
                "personalPhone": {
                    "type": "string",
                    "x-order": "22",
                    "example": "+447769578549"
                },
                "parentsPhone": {
                    "type": "string",
                    "x-order": "23",
                    "example": "+447464751722"
                },
                "reportSendingEmail": {
                    "type": "string",
                    "x-order": "24",
                    "example": "arthur.weasley@mom.gouv.uk"
                },
                "parentsEmail": {
                    "type": "string",
                    "x-order": "25",
                    "example": "arthur.weasley@mom.gouv.uk"
                },
                "personalEmail": {
                    "type": "string",
                    "x-order": "26",
                    "example": "ronald.weasley@poudlard.uk"
                },
                "lastCertificate": {
                    "type": "string",
                    "x-order": "27",
                    "example": "Baccalauréat"
                },
                "bac": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.BacType"
                        }
                    ],
                    "x-order": "28"
                },
                "father": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Parent"
                        }
                    ],
                    "x-order": "29"
                },
                "mother": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/isen.Parent"
                        }
                    ],
                    "x-order": "30"
                },
                "haveAcknowledgeGlobalRules": {
                    "type": "boolean",
                    "x-order": "31",
                    "example": true
                },
                "haveAcknowledgeStudentLifeCharter": {
                    "type": "boolean",
                    "x-order": "32",
                    "example": true
                },
                "canIsenUsePersonalImage": {
                    "type": "boolean",
                    "x-order": "33",
                    "example": true
                }
            }
        },
        "isen.ScheduleEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "x-order": "1",
                    "example": "1"
                },
                "title": {
                    "type": "string",
                    "x-order": "2",
                    "example": "08:00 - 10:00 - Herbology Class - Professor - Sprout - GreenHouse - TD - (02h00) -  - 154632"
                },
                "start": {
                    "type": "string",
                    "x-order": "3",
                    "example": "2001-12-05T08:00:00+0100"
                },
                "end": {
                    "type": "string",
                    "x-order": "4",
                    "example": "2001-12-05T10:00:00+0100"
                },
                "allDay": {
                    "type": "boolean",
                    "x-order": "5",
                    "example": false
                },
                "editable": {
                    "type": "boolean",
                    "x-order": "6",
                    "example": true
                },
                "className": {
                    "type": "string",
                    "x-order": "7",
                    "example": "TD"
                }
            }
        },
        "isen.ScheduleEventDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "x-order": "10",
                    "example": "1"
                },
                "start": {
                    "type": "string",
                    "x-order": "11",
                    "example": "Du mercredi 5 décembre 2001 à 08:00"
                },
                "end": {
                    "type": "string",
                    "x-order": "12",
                    "example": "Au mercredi 5 décembre 2001 à 10:00"
                },
                "status": {
                    "type": "string",
                    "x-order": "13",
                    "example": "REALISE"
                },
                "subject": {
                    "type": "string",
                    "x-order": "14",
                    "example": "Herbology"
                },
                "type": {
                    "type": "string",
                    "x-order": "15",
                    "example": "Travaux dirigés"
                },
                "description": {
                    "type": "string",
                    "x-order": "16",
                    "example": ""
                },
                "isPaper": {
                    "type": "boolean",
                    "x-order": "17",
                    "example": false
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "18",
                    "example": [
                        "Greenhouse"
                    ]
                },
                "teachers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "19",
                    "example": [
                        "Sprout Professor"
                    ]
                },
                "students": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "20",
                    "example": [
                        "GRANGER Hermione",
                        "POTTER Harry",
                        "WEASLEY Ronald"
                    ]
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-order": "21",
                    "example": [
                        "0102YEAR1"
                    ]
                },
                "courseName": {
                    "type": "string",
                    "x-order": "22",
                    "example": "Herbology Class"
                },
                "module": {
                    "type": "string",
                    "x-order": "23",
                    "example": "Herbology"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token from ISEN webaurion to access all the user's data",
            "type": "apiKey",
            "name": "Token",
            "in": "header"
        }
    }
}